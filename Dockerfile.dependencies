FROM ubuntu:22.04

ENV TZ=Brazil/East
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV SAL_USE_VCLPLUGIN='gtk'
ENV JAVA_HOME=/usr/lib/jvm/bellsoft-java11-full-amd64/
ENV LD_LIBRARY_PATH=/usr/local/lib/python3.9/dist-packages/jep/

WORKDIR /root/pkgs
RUN apt-get update && apt-get install -y wget gnupg apt-utils software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && wget -q -O - https://download.bell-sw.com/pki/GPG-KEY-bellsoft | tee /etc/apt/trusted.gpg.d/bellsoft.asc \
    && echo "deb [arch=amd64] https://apt.bell-sw.com/ stable main" | tee /etc/apt/sources.list.d/bellsoft.list \
    && apt-get update \
    && apt-get install -y apt-transport-https apt-utils \
    && apt-get upgrade -y \
    && apt-get install -y \
            git \
            build-essential \
            autoconf automake autopoint libtool pkg-config yasm gettext flex byacc wget \
            zlib1g-dev libncurses5-dev libcurl4-openssl-dev libexpat1-dev libreadline-dev \
            unzip patch \
            libaa1-dev libasound2-dev libcaca-dev libcdparanoia-dev libdca-dev \
            libdirectfb-dev libenca-dev libfontconfig1-dev libfreetype6-dev \
            libfribidi-dev libgif-dev libgl1-mesa-dev libjack-jackd2-dev libopenal1 libpulse-dev \
            libsdl1.2-dev libvdpau-dev libxinerama-dev libxv-dev libxvmc-dev libxxf86dga-dev \
            libxxf86vm-dev librtmp-dev libsctp-dev libass-dev libfaac-dev libsmbclient-dev libtheora-dev \
            libogg-dev libxvidcore-dev libspeex-dev libvpx-dev libdv4-dev \
            libopencore-amrnb-dev libopencore-amrwb-dev libmp3lame-dev libtwolame-dev \
            libmad0-dev libgsm1-dev libbs2b-dev liblzo2-dev ladspa-sdk libfaad-dev \
            libmpg123-dev libopus-dev libbluray-dev libaacs-dev \
            libjpeg-dev \
            libtiff-dev \
            libpng-dev \
            libwmf-dev \
            libgif-dev \
            libheif-dev \
            libwebp-dev \
            librsvg2-dev \
            libopenexr-dev \
            libatomic1 \
            vim \
            less\
            libparse-win32registry-perl \
            tesseract-ocr tesseract-ocr-osd tesseract-ocr-por tesseract-ocr-eng tesseract-ocr-deu tesseract-ocr-frk tesseract-ocr-ita \
            graphviz \  
            bellsoft-java11-full \
            mplayer \
            rifiuti2 \
            python3.9 python3.9-distutils python3-pip python3.9-dev \
            sudo \
    && apt-get download ant && ls *.deb | awk '{system("dpkg-deb -x "$1" /")}' && apt-get install -y ant-optional \ 
    && echo "#####################################" \
    && echo " Installing LIBSSL v1.1 to be used with sleuthkit IPED patch" \
    && echo "#####################################" \
    && echo "deb http://security.ubuntu.com/ubuntu focal-security main" | tee /etc/apt/sources.list.d/focal-security.list \
    && apt-get update \
    && apt-get install -y libssl-dev=1.1.1f-1ubuntu2.17 \
    && rm /etc/apt/sources.list.d/focal-security.list && apt-get update \
    && echo "#####################################" \
    && echo "install libbfio" \
    && echo "#####################################" \
    && cd /opt \
    && git clone -b 20221025 https://github.com/libyal/libbfio \
    && cd /opt/libbfio \ 
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/libbfio \
    && echo "#####################################" \
    && echo "install libvslvm" \
    && echo "#####################################" \
    && cd /opt \
    && git clone -b 20221025 https://github.com/libyal/libvslvm \
    && cd /opt/libvslvm \ 
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/libvslvm \            
    && echo "#####################################" \
    && echo "install libvmdk" \
    && echo "#####################################" \
    && cd /opt \
    && git clone -b 20221124 https://github.com/libyal/libvmdk \
    && cd /opt/libvmdk \ 
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/libvmdk \
    && echo "#####################################" \
    && echo "install libvhdi" \
    && echo "#####################################" \
    && cd /opt \
    && git clone -b 20221124 https://github.com/libyal/libvhdi \
    && cd /opt/libvhdi \ 
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/libvhdi \
    && echo "#####################################" \
    && echo "install libewf" \
    && echo "#####################################" \
    && cd /opt \
    && git clone -b 20140808 https://github.com/libyal/libewf-legacy \
    && cd /opt/libewf_legacy \  
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/libewf_legacy \
    && echo "#####################################" \
    && echo "install afflib" \
    && echo "#####################################" \
    && cd /opt \
    && git clone -b v3.7.20 https://github.com/sshock/AFFLIBv3 \
    && cd /opt/AFFLIBv3 \ 
    && ./bootstrap.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/AFFLIBv3 \
    && echo "#####################################################" \
    && echo " Installing Sleuthkit with IPED patch with libssl" \
    && echo "#####################################################" \
    && cd /opt \
    && git clone -b 4.12.0_iped_patch https://github.com/sepinf-inc/sleuthkit \
    && cd /opt/sleuthkit/ \
    && ./bootstrap \ 
    && ./configure --prefix=/usr/ \
    && make && make install \
    && rm -rf /opt/sleuthkit/ \
    && echo "#####################################" \
    && echo "The libagdb only have branch master" \
    && echo "#####################################" \
    && cd /opt \
    && git clone https://github.com/libyal/libagdb.git \
    && cd /opt/libagdb \
    && ./synclibs.sh \
    && ./autogen.sh \    
    && ./configure --prefix=/usr \ 
    && make all install \
    && rm -rf /opt/libagdb \
    && echo "#####################################" \
    && echo "install libevtx - master is th only working branch" \
    && echo "#####################################" \
    && cd /opt \
    && git clone https://github.com/libyal/libevtx \
    && cd /opt/libevtx \ 
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/libevtx \
    && echo "#####################################" \
    && echo "Install libevt - master is th only working branch" \
    && echo "#####################################" \
    && cd /opt \
    && git clone https://github.com/libyal/libevt \
    && cd /opt/libevt \
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/libevt \
    && echo "#####################################" \
    && echo "Install libscca" \
    && echo "#####################################" \
    && cd /opt \
    && git clone --branch="20210419" https://github.com/libyal/libscca \
    && cd /opt/libscca \
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/libscca \
    && echo "#####################################" \
    && echo "Install libesedb" \
    && echo "#####################################" \
    && cd /opt \
    && git clone --branch="20210424" https://github.com/libyal/libesedb \
    && cd /opt/libesedb \
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/libesedb \
    && echo "#####################################" \
    && echo "Install libpff without branch also, because latest release got problems" \
    && echo "#####################################" \
    && cd /opt \
    && git clone https://github.com/libyal/libpff \
    && cd /opt/libpff \
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \ 
    && make all install \
    && rm -rf /opt/libpff \
    && echo "#####################################" \
    && echo "Install libmsiecf" \
    && echo "#####################################" \
    && cd /opt \
    && git clone --branch="20210420" https://github.com/libyal/libmsiecf \
    && cd /opt/libmsiecf \
    && ./synclibs.sh \
    && ./autogen.sh \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/libmsiecf \
    && echo "#####################################" \
    && echo "rifiuti2 - rifiuti2 was be installed from packages due to gettext incompatibility" \
    && echo "Just creating rifiuti link" \
    && echo "#####################################" \
    #&& cd /opt \
    #&& git clone --branch="0.7.0" https://github.com/abelcheung/rifiuti2 \
    #&& cd /opt/rifiuti2 \
    #&& autoreconf -f -i -v \
    #&& ./configure --prefix=/usr \
    #&& make all install \
    #&& rm -rf /opt/rifiuti2 
    && update-alternatives --install /usr/bin/rifiuti rifiuti /usr/bin/rifiuti2 1 \
    && echo "#####################################" \
    && echo "Instal ImageMagik" \
    && echo "#####################################" \
    && cd /opt \
    && git clone --branch "7.0.10-61" https://github.com/ImageMagick/ImageMagick \
    && cd /opt/ImageMagick \
    && ./configure --prefix=/usr \
    && make all install \
    && rm -rf /opt/ImageMagick \
    && echo "#####################################" \
    && echo "Creating mplayer config" \
    && echo "#####################################" \
    && mplayer \
    && echo "#####################################" \
    && echo "Installing PYTHON IPED Dependencies" \
    && echo "#####################################" \
    && cd /root/ \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1 \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1 \
    && python -m pip install pip --upgrade \
    && python -m pip install cmake \
    && python -m pip install numpy \
    && python -m pip install jep==4.0.3 \
                          keras \
                          tensorflow \
                          pillow \
                          bs4 \
                          face_recognition \
                          huggingsound \
    && echo "#####################################" \
    && echo "Cleaning UP the container " \
    && echo "#####################################" \
    && apt-get remove -y ant ant-optional python3-pip build-essential \
                       autoconf automake autopoint libtool pkg-config yasm gettext \
    && apt-get autoremove -y \
    && rm -rf /root/.cache/pip && apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /root/
CMD ["/bin/bash"]
